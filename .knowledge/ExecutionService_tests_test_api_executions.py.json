{"is_source_file": true, "format": "Python", "description": "This file contains test cases for API endpoints related to execution management, including submitting executions, retrieving execution details and logs, listing executions, and handling error cases. The tests make use of the FastAPI TestClient and interact with the ExecutionService API schemas and endpoints.", "external_files": ["pytest", "fastapi.testclient", "src.models.schemas"], "external_methods": ["pytest", "fastapi.testclient.TestClient", "src.models.schemas.GitSource", "src.models.schemas.ExecutionRequest", "src.models.schemas.ExecutionEnvironment", "src.models.schemas.ExecutionStatus"], "published": [], "classes": [], "methods": [{"name": "_sample_request()", "description": "Creates a sample ExecutionRequest object with predefined Git source, entrypoint, parameters, environment, and correlation ID used in multiple test cases.", "scope": "", "scopeKind": ""}, {"name": "test_submit_execution_happy_path(client: TestClient)", "description": "Tests the submission of an execution and verifies a 201 status with expected response structure.", "scope": "", "scopeKind": ""}, {"name": "test_get_execution_detail_and_logs_flow(client: TestClient)", "description": "Tests fetching execution details and logs, including pagination and status checks, for a submitted execution.", "scope": "", "scopeKind": ""}, {"name": "test_list_executions_and_filter(client: TestClient)", "description": "Tests listing executions with pagination and filtering by status.", "scope": "", "scopeKind": ""}, {"name": "test_execution_not_found_errors(client: TestClient)", "description": "Tests response status codes when requesting non-existent execution details and logs.", "scope": "", "scopeKind": ""}], "calls": ["client.post", "client.get"], "search-terms": ["ExecutionRequest", "TestClient", "execution_id", "logs", "filter", "status", "API", "test_api_executions"], "state": 2, "file_id": 16, "knowledge_revision": 38, "git_revision": "", "ctags": [{"_type": "tag", "name": "_sample_request", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/tests/test_api_executions.py", "pattern": "/^def _sample_request():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_execution_not_found_errors", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/tests/test_api_executions.py", "pattern": "/^def test_execution_not_found_errors(client: TestClient):$/", "language": "Python", "kind": "function", "signature": "(client: TestClient)"}, {"_type": "tag", "name": "test_get_execution_detail_and_logs_flow", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/tests/test_api_executions.py", "pattern": "/^def test_get_execution_detail_and_logs_flow(client: TestClient):$/", "language": "Python", "kind": "function", "signature": "(client: TestClient)"}, {"_type": "tag", "name": "test_list_executions_and_filter", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/tests/test_api_executions.py", "pattern": "/^def test_list_executions_and_filter(client: TestClient):$/", "language": "Python", "kind": "function", "signature": "(client: TestClient)"}, {"_type": "tag", "name": "test_submit_execution_happy_path", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/tests/test_api_executions.py", "pattern": "/^def test_submit_execution_happy_path(client: TestClient):$/", "language": "Python", "kind": "function", "signature": "(client: TestClient)"}], "hash": "f3cf63441996823407585c0b2d7f4571", "format-version": 4, "code-base-name": "ExecutionService", "filename": "ExecutionService/tests/test_api_executions.py", "revision_history": [{"38": ""}]}