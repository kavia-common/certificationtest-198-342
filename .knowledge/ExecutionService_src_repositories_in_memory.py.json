{"is_source_file": true, "format": "Python", "description": "This file implements an in-memory thread-safe repository for managing execution details and logs of some process or task management system. It provides methods for creating, retrieving, updating, listing, and logging execution data, designed to be replaced with a persistent backend in the future.", "external_files": ["../models/schemas"], "external_methods": [], "published": ["create_execution", "get_execution", "update_status", "append_logs", "read_logs", "list_executions", "stats"], "classes": [{"name": "InMemoryExecutionRepository", "description": "A thread-safe in-memory repository class for storing and managing execution details and logs."}], "methods": [{"name": "ExecutionDetail create_execution( self, execution_id: str, git: GitSource, entrypoint: str, parameters: Dict[str, Any], environment: ExecutionEnvironment, correlation_id: Optional[str], )", "description": "Creates and stores a new execution record with status QUEUED, initializing timestamps and related data.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "Optional[ExecutionDetail] get_execution(self, execution_id: str)", "description": "Retrieves an execution detail by its unique ID.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "Optional[ExecutionDetail] update_status( self, execution_id: str, status: ExecutionStatus, result: Optional[Dict[str, Any]] = None, error: Optional[str] = None, )", "description": "Updates the status, result, and error fields of an existing execution, also refreshing the timestamp.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "None append_logs(self, execution_id: str, lines: List[str])", "description": "Adds log lines to the execution's log store.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "Tuple[List[str],int,bool] read_logs(self, execution_id: str, offset: int = 0, limit: int = 200)", "description": "Reads logs for a specific execution incrementally, providing next offset and end-of-file status.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "List[ExecutionDetail] list_executions(self, limit: int = 50, status: Optional[ExecutionStatus] = None)", "description": "Returns a list of recent executions, optionally filtered by status.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "Dict[str,int] stats(self)", "description": "Computes and returns basic statistics about the current executions, such as total counts by state.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "InMemoryExecutionRepository", "scopeKind": "class", "description": "unavailable"}], "calls": ["threading.RLock", "datetime.utcnow", "ExecutionDetail", "ExecutionStatus", "ExecutionEnvironment", "GitSource"], "search-terms": ["InMemoryExecutionRepository", "thread-safe in-memory store", "execution management", "logs management", "create_execution", "update_status", "read_logs"], "state": 2, "file_id": 6, "knowledge_revision": 32, "git_revision": "bafcf07da4ccc48b61de3cc1b23657a30238f2b9", "revision_history": [{"14": ""}, {"30": ""}, {"32": "bafcf07da4ccc48b61de3cc1b23657a30238f2b9"}], "ctags": [{"_type": "tag", "name": "InMemoryExecutionRepository", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^class InMemoryExecutionRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "append_logs", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def append_logs(self, execution_id: str, lines: List[str]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, execution_id: str, lines: List[str])", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_execution", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def create_execution($/", "language": "Python", "typeref": "typename:ExecutionDetail", "kind": "member", "signature": "( self, execution_id: str, git: GitSource, entrypoint: str, parameters: Dict[str, Any], environment: ExecutionEnvironment, correlation_id: Optional[str], )", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_execution", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def get_execution(self, execution_id: str) -> Optional[ExecutionDetail]:$/", "language": "Python", "typeref": "typename:Optional[ExecutionDetail]", "kind": "member", "signature": "(self, execution_id: str)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_executions", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def list_executions(self, limit: int = 50, status: Optional[ExecutionStatus] = None) -> List/", "language": "Python", "typeref": "typename:List[ExecutionDetail]", "kind": "member", "signature": "(self, limit: int = 50, status: Optional[ExecutionStatus] = None)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "read_logs", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def read_logs(self, execution_id: str, offset: int = 0, limit: int = 200) -> Tuple[List[str]/", "language": "Python", "typeref": "typename:Tuple[List[str],int,bool]", "kind": "member", "signature": "(self, execution_id: str, offset: int = 0, limit: int = 200)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "stats", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def stats(self) -> Dict[str, int]:$/", "language": "Python", "typeref": "typename:Dict[str,int]", "kind": "member", "signature": "(self)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def update_status($/", "language": "Python", "typeref": "typename:Optional[ExecutionDetail]", "kind": "member", "signature": "( self, execution_id: str, status: ExecutionStatus, result: Optional[Dict[str, Any]] = None, error: Optional[str] = None, )", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}], "hash": "85b88f075d4027d1345899b5478306bf", "format-version": 4, "code-base-name": "ExecutionService", "filename": "ExecutionService/src/repositories/in_memory.py"}