{"is_source_file": true, "format": "Python", "description": "This file defines the InMemoryExecutionRepository class, an in-memory thread-safe repository for managing execution details and logs within a testing or development environment. It provides methods for creating, reading, updating, and listing execution records, as well as handling logs. The repository is designed for lightweight, temporary use and hints at future replacement with a persistent storage solution.", "external_files": ["../models/schemas"], "external_methods": ["ExecutionDetail", "ExecutionStatus", "ExecutionEnvironment", "GitSource"], "published": ["create_execution", "get_execution", "update_status", "append_logs", "read_logs", "list_executions", "stats"], "classes": [{"name": "InMemoryExecutionRepository", "description": "A thread-safe, in-memory repository for storing execution details and logs for testing or development purposes."}], "methods": [{"name": "ExecutionDetail create_execution( self, execution_id: str, git: GitSource, entrypoint: str, parameters: Dict[str, Any], environment: ExecutionEnvironment, correlation_id: Optional[str], )", "description": "Creates a new execution record with initial status QUEUED, storing metadata like git source, environment, entrypoint, parameters, and correlation id.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "Optional[ExecutionDetail] get_execution(self, execution_id: str)", "description": "Retrieves an existing execution detail by its execution ID.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "Optional[ExecutionDetail] update_status( self, execution_id: str, status: ExecutionStatus, result: Optional[Dict[str, Any]] = None, error: Optional[str] = None, )", "description": "Updates the status, result, error, and timestamps for a given execution record.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "None append_logs(self, execution_id: str, lines: List[str])", "description": "Appends a list of log lines to the logs associated with an execution ID.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "Tuple[List[str],int,bool] read_logs(self, execution_id: str, offset: int = 0, limit: int = 200)", "description": "Reads a segment of logs for a specified execution, supporting incremental log retrieval with offset and limit parameters. Returns logs, next offset, and EOF indicator.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "List[ExecutionDetail] list_executions(self, limit: int = 50, status: Optional[ExecutionStatus] = None)", "description": "Returns a list of recent execution details, optionally filtered by status, limited to the most recent entries.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "Dict[str,int] stats(self)", "description": "Provides basic statistics about stored executions, such as counts by status.", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "InMemoryExecutionRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "None __init__(self, repo: Optional[InMemoryExecutionRepository] = None)", "scope": "ExecutionService", "scopeKind": "class", "description": "unavailable"}, {"name": "None _simulate_execution(self, execution_id: str)", "scope": "ExecutionService", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[ExecutionDetail] get(self, execution_id: str)", "scope": "ExecutionService", "scopeKind": "class", "description": "unavailable"}, {"name": "list(self, limit: int = 50, status: Optional[ExecutionStatus] = None)", "scope": "ExecutionService", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[LogsResponse] logs(self, execution_id: str, offset: int = 0, limit: int = 200)", "scope": "ExecutionService", "scopeKind": "class", "description": "unavailable"}, {"name": "SubmitResponse submit(self, req: ExecutionRequest)", "scope": "ExecutionService", "scopeKind": "class", "description": "unavailable"}, {"name": "float uptime_seconds(self)", "scope": "ExecutionService", "scopeKind": "class", "description": "unavailable"}], "calls": ["self._lock.acquire()", "self._lock.release()", "self._executions.get()", "self._executions[execution_id]", "self._logs.get()", "self._logs.setdefault()", "self._logs[execution_id].extend()", "self._created_order.append()", "self._created_order[-limit:]", "self._executions.values()", "detail.status.value", "detail.created_at", "r.status", "r.created_at"], "search-terms": ["InMemoryExecutionRepository", "thread-safe in-memory repository", "execution management", "log handling", "simulation testing", "execution stats"], "state": 2, "file_id": 6, "knowledge_revision": 30, "git_revision": "", "revision_history": [{"14": ""}, {"30": ""}], "ctags": [{"_type": "tag", "name": "ExecutionService", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^class ExecutionService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "InMemoryExecutionRepository", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^class InMemoryExecutionRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def __init__(self, repo: Optional[InMemoryExecutionRepository] = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, repo: Optional[InMemoryExecutionRepository] = None)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "_simulate_execution", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    async def _simulate_execution(self, execution_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, execution_id: str)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "append_logs", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def append_logs(self, execution_id: str, lines: List[str]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, execution_id: str, lines: List[str])", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_execution", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def create_execution($/", "language": "Python", "typeref": "typename:ExecutionDetail", "kind": "member", "signature": "( self, execution_id: str, git: GitSource, entrypoint: str, parameters: Dict[str, Any], environment: ExecutionEnvironment, correlation_id: Optional[str], )", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def get(self, execution_id: str) -> Optional[ExecutionDetail]:$/", "language": "Python", "typeref": "typename:Optional[ExecutionDetail]", "kind": "member", "signature": "(self, execution_id: str)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "get_execution", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def get_execution(self, execution_id: str) -> Optional[ExecutionDetail]:$/", "language": "Python", "typeref": "typename:Optional[ExecutionDetail]", "kind": "member", "signature": "(self, execution_id: str)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def list(self, limit: int = 50, status: Optional[ExecutionStatus] = None):$/", "language": "Python", "kind": "member", "signature": "(self, limit: int = 50, status: Optional[ExecutionStatus] = None)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "list_executions", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def list_executions(self, limit: int = 50, status: Optional[ExecutionStatus] = None) -> List/", "language": "Python", "typeref": "typename:List[ExecutionDetail]", "kind": "member", "signature": "(self, limit: int = 50, status: Optional[ExecutionStatus] = None)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "logs", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def logs(self, execution_id: str, offset: int = 0, limit: int = 200) -> Optional[LogsRespons/", "language": "Python", "typeref": "typename:Optional[LogsResponse]", "kind": "member", "signature": "(self, execution_id: str, offset: int = 0, limit: int = 200)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "read_logs", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def read_logs(self, execution_id: str, offset: int = 0, limit: int = 200) -> Tuple[List[str]/", "language": "Python", "typeref": "typename:Tuple[List[str],int,bool]", "kind": "member", "signature": "(self, execution_id: str, offset: int = 0, limit: int = 200)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "stats", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def stats(self) -> Dict[str, int]:$/", "language": "Python", "typeref": "typename:Dict[str,int]", "kind": "member", "signature": "(self)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "stats", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def stats(self) -> Dict[str, int]:$/", "language": "Python", "typeref": "typename:Dict[str,int]", "kind": "member", "signature": "(self)", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "submit", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def submit(self, req: ExecutionRequest) -> SubmitResponse:$/", "language": "Python", "typeref": "typename:SubmitResponse", "kind": "member", "signature": "(self, req: ExecutionRequest)", "scope": "ExecutionService", "scopeKind": "class"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def update_status($/", "language": "Python", "typeref": "typename:Optional[ExecutionDetail]", "kind": "member", "signature": "( self, execution_id: str, status: ExecutionStatus, result: Optional[Dict[str, Any]] = None, error: Optional[str] = None, )", "scope": "InMemoryExecutionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "uptime_seconds", "path": "/home/kavia/workspace/code-generation/certificationtest-198-342/ExecutionService/src/repositories/in_memory.py", "pattern": "/^    def uptime_seconds(self) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "member", "signature": "(self)", "scope": "ExecutionService", "scopeKind": "class"}], "hash": "a56d14b6d0bca7f6f7a141e581eb9163", "format-version": 4, "code-base-name": "ExecutionService", "filename": "ExecutionService/src/repositories/in_memory.py"}